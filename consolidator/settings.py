#  scrapper/config/settings.py
"""
Django settings for scrapers project.

Generated by 'django-admin startproject' using Django 1.11.0.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import os
import dotenv

from os import getenv
from platform import python_version


dotenv.read_dotenv('environment/local.env')

DEBUG = bool(int(getenv('DEBUG', 0)))

# Check Environment
DEV_ENVIRONMENT = 'dev'
STAGE_ENVIRONMENT = 'stage'
PROD_ENVIRONMENT = 'prod'
ENVIRONMENT = getenv('ENVIRONMENT', DEV_ENVIRONMENT)
if ENVIRONMENT not in (DEV_ENVIRONMENT, STAGE_ENVIRONMENT, PROD_ENVIRONMENT):
    raise ValueError("Unknown environment {}".format(ENVIRONMENT))

ALLOWED_HOSTS = ['*']

if ENVIRONMENT == DEV_ENVIRONMENT:
    CORS_ORIGIN_ALLOW_ALL = True
else:
    CORS_ORIGIN_REGEX_WHITELIST = (
        r'^(https?://)?(\w+\.)+nuevo-chile\.cl$',
        r'^(https?://)?(\w+\.)+instoreview\.cl$'
    )

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_NAME = os.path.basename(os.path.dirname(BASE_DIR))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv('SECRET_KEY', '!m^j62gcbk6$4(2+ijm6@929-r-@3*(=p4@sjn@xswqr0ip&#+')

# Application definition
SYSTEM_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_extensions',
    'corsheaders',
]

PROJECT_APPS = [
    'scrapers.apps.base.apps.BaseConfig',
    'scrapers.apps.salcobrand.apps.SalcobrandConfig',
    'scrapers.apps.salcobrand_new.apps.NewSalcobrandConfig',
    'scrapers.apps.cmr.apps.CmrConfig',
    'scrapers.apps.bbr.apps.BbrConfig',
    'scrapers.apps.walmart.apps.WalmartConfig',
    'scrapers.apps.preunic.apps.PreunicConfig',
    'scrapers.apps.maicao.apps.MaicaoConfig',
    'scrapers.apps.makro.apps.MakroConfig',
    'scrapers.apps.ripley.apps.RipleyConfig',
    'scrapers.apps.api.apps.ApiConfig',
    'scrapers.apps.consolidator.apps.ConsolidatorConfig',
    'scrapers.apps.chedraui.apps.ChedrauiScraperConfig',
    'scrapers.apps.cenbiz.apps.CenbizScraperConfig',
    'scrapers.apps.anonima.apps.AnonimaConfig',
    'scrapers.apps.prove_comer.apps.ProveComerScraperConfig',
    'scrapers.apps.soriana.apps.SorianaScraperConfig',
    'scrapers.apps.oxxo.apps.OxxoScraperConfig',
    'scrapers.apps.liverpool.apps.LiverpoolScraperConfig',
    'scrapers.apps.cornershop.apps.CornershopScraperConfig',
    'scrapers.apps.alianza.apps.AlianzaScraperConfig',
    'scrapers.apps.casaley.apps.CasaleyScraperConfig',
    'scrapers.apps.bsale.apps.BsaleScraperConfig',
    'scrapers.apps.pcfactory.apps.PcFactoryScraperConfig',
    'scrapers.apps.locatel.apps.LocatelScraperConfig',
    'scrapers.apps.pasteur.apps.PasteurScraperConfig',
    'scrapers.apps.keylogistics.apps.KeyLogisticsScraperConfig',
    'scrapers.apps.rabie.apps.RabieScraperConfig',
    'scrapers.apps.dimerc.apps.DimercScraperConfig',
    'scrapers.apps.canontex.apps.CanontexScraperConfig',
    'scrapers.apps.almendariz.apps.AlmendarizScraperConfig',
    'scrapers.apps.costco.apps.CostcoScraperConfig',
    'scrapers.apps.heb.apps.HebScraperConfig',
    'scrapers.apps.quimica_suiza.apps.QuimicaSuizaScraperConfig',
    'scrapers.apps.home_depot.apps.HomeDepotScraperConfig',
    'scrapers.apps.coppel.apps.CoppelScraperConfig',
    'scrapers.apps.fda.apps.FdaScraperConfig',
    'scrapers.apps.sanborns.apps.SanbornsScraperConfig',
    'scrapers.apps.monroe.apps.MonroeScraperConfig',
    'scrapers.apps.salesforce.apps.SalesForceScraperConfig',
    'scrapers.apps.farmacity.apps.FarmaCityScraperConfig',
    'scrapers.apps.proconsumo.apps.ProConsumoScraperConfig',
]

INSTALLED_APPS = SYSTEM_APPS + PROJECT_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if ENVIRONMENT != DEV_ENVIRONMENT:
    MIDDLEWARE += (
        'raven.contrib.django.raven_compat.middleware.SentryResponseErrorIdMiddleware',
    )

    RAVEN_CONFIG = {
        'dsn': os.getenv('RAVEN_DSN', ''),
        'release': ENVIRONMENT,
    }


ROOT_URLCONF = 'scrapers.config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'scrapers.config.wsgi.application'

DATABASE_ROUTERS = ['scrapers.config.router.Router']

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Santiago'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    )
}

# ==============================================================================
# DATABASES
# ==============================================================================

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': getenv('DATABASE_NAME', 'b2b_scrapers'),
        'USER': getenv('DATABASE_USER', 'techk'),
        'PASSWORD': getenv('DATABASE_PASSWORD', 'b2b_scrapers'),
        'HOST': getenv('DATABASE_HOST', 'postgres'),
        'PORT': getenv('DATABASE_PORT', '5432'),
    }
}

# ==============================================================================
# LOGGER
# ==============================================================================

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(levelname)-s] %(module)s (L:%(lineno)-d) - %(message)s'
        },
        'verbose': {
            'format': '[%(levelname)-s] %(asctime)s %(module)-s (L:%(lineno)-d) %(message)s'
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'sentry': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler',
            'dsn': getenv('SENTRY_DSN', ''),
            'environment': ENVIRONMENT,
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['sentry', 'console'],
            'level': 'ERROR',
            'propagate': True,
        },
        'scrapers.apps': {
            'handlers': ['sentry', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

CONSOLIDATED_FILES_ENCODING = 'utf-8'
CONSOLIDATED_FILES_PERMITED_ENCODINGS = [CONSOLIDATED_FILES_ENCODING, 'us-ascii']
TRANSFORMER_CHUNKSIZE = 500000
TRANSFORMER_DECISIVE_CHUNK_LINES = 1000000

S3_ORIGINAL_FILES_BUCKET = 'portales-descargas'
S3_CONSOLIDATED_FILES_BUCKET = 'consolidados'
S3_ADMIN_MANUAL_DOWNLOADS_BUCKET = 'isv-admin-consolidacion'

if ENVIRONMENT != PROD_ENVIRONMENT:
    S3_ORIGINAL_FILES_BUCKET += '-dev'
    S3_CONSOLIDATED_FILES_BUCKET += '-dev'
    S3_ADMIN_MANUAL_DOWNLOADS_BUCKET += '-dev'

AWS_ACCESS_KEY_ID = getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = getenv('AWS_SECRET_ACCESS_KEY')

VALUE_IVA = 1.19

SELENIUM_URL = getenv('SELENIUM_URL', 'http://hub:4444/wd/hub')

ANTICAPTCHA_KEY = getenv('ANTICAPTCHA_KEY')

# ==============================================================================
# UTILS SETTINGS
# ==============================================================================
TIME_TO_DELETE_TMP_FILES = 300
# ==============================================================================
# UTILS PATH/DIRS
# ==============================================================================
TEMP_DIR = 'tmp'

PYTHON_VERSION = python_version()

PROJECT_VERSION = open('VERSION', 'r').read().strip()
